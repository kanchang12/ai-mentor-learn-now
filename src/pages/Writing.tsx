
import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { ScrollArea } from "@/components/ui/scroll-area";
import { 
  ArrowLeft,
  Bot,
  User,
  Minimize2,
  Maximize2,
  PenTool,
  FileText,
  Send,
  Copy,
  RefreshCw
} from "lucide-react";
import { Link } from "react-router-dom";
import { useUsageTracking } from "@/hooks/useUsageTracking";
import { UsageMeter } from "@/components/UsageMeter";
import { AffiliateCard } from "@/components/AffiliateCard";

const Writing = () => {
  const [prompt, setPrompt] = useState("");
  const [isWriting, setIsWriting] = useState(false);
  const [generatedContent, setGeneratedContent] = useState("");
  const [chatMessage, setChatMessage] = useState("");
  const [chatMinimized, setChatMinimized] = useState(false);
  const { usageMinutes, isLimitReached, loading, trackUsage, trackAffiliateClick } = useUsageTracking('writing');
  
  const [chatMessages, setChatMessages] = useState([
    {
      id: 1,
      sender: "ai",
      message: "Hello! I'm your AI writing assistant. I can help you create blog posts, social media content, emails, and more. Powered by Copy.ai and GPT models. What would you like to write today?",
      timestamp: "Just now"
    }
  ]);

  const generateContent = async () => {
    if (!prompt.trim() || isLimitReached) return;

    setIsWriting(true);
    setGeneratedContent("");

    // Simulate content generation
    setTimeout(() => {
      setGeneratedContent(`# ${prompt}

## Introduction
Artificial intelligence is revolutionizing the way we work and create content. In today's fast-paced digital world, having powerful AI tools at your disposal can make the difference between success and falling behind.

## Key Benefits
- **Increased Productivity**: AI tools can help you create content 10x faster
- **Enhanced Creativity**: Get fresh perspectives and ideas you might not have considered
- **Consistent Quality**: Maintain high standards across all your content
- **Time Savings**: Focus on strategy while AI handles the heavy lifting

## Best Practices
1. **Clear Prompts**: Be specific about what you want to achieve
2. **Iterative Approach**: Refine your requests based on initial results
3. **Human Touch**: Always add your personal expertise and voice
4. **Quality Control**: Review and edit AI-generated content

## Conclusion
The future of content creation lies in the powerful combination of human creativity and artificial intelligence. By leveraging these tools effectively, you can unlock new levels of productivity and creative potential.

---
*Generated by AI Writing Assistant - Ready for your personal touch and refinement*`);
      
      trackUsage(2);
      setIsWriting(false);
    }, 3000);
  };

  const copyContent = () => {
    navigator.clipboard.writeText(generatedContent);
  };

  const sendChatMessage = () => {
    if (!chatMessage.trim()) return;

    const newUserMessage = {
      id: Date.now(),
      sender: "user",
      message: chatMessage,
      timestamp: "Just now"
    };

    setChatMessages(prev => [...prev, newUserMessage]);
    setChatMessage("");

    setTimeout(() => {
      const aiResponse = {
        id: Date.now() + 1,
        sender: "ai", 
        message: "Great question about writing! For effective AI-assisted writing, I recommend starting with a clear outline, using specific prompts, and always adding your unique voice to the generated content.",
        timestamp: "Just now"
      };
      setChatMessages(prev => [...prev, aiResponse]);
    }, 1000);
  };

  return (
    <div className="min-h-screen bg-[#fef9ed]">
      {/* Header */}
      <header className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center space-x-4">
              <Link to="/dashboard">
                <Button variant="ghost" size="sm" className="text-[#22201d] hover:text-[#6cae75] hover:bg-[#e9ecf1]">
                  <ArrowLeft className="h-4 w-4 mr-2" />
                  Back to Dashboard
                </Button>
              </Link>
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-gradient-to-br from-green-500/20 to-teal-500/20 rounded-xl flex items-center justify-center border border-green-500/30">
                  <span className="text-2xl">✍️</span>
                </div>
                <div>
                  <h1 className="text-xl font-bold text-[#22201d]">AI Writing Assistant</h1>
                  <p className="text-sm text-[#22201d] opacity-70">Powered by Copy.ai & GPT</p>
                </div>
              </div>
            </div>

            <UsageMeter 
              usageMinutes={usageMinutes} 
              isLimitReached={isLimitReached} 
              loading={loading} 
            />
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div className="grid lg:grid-cols-3 gap-6">
          {/* Main Demo Section */}
          <div className="lg:col-span-2 space-y-6">
            {/* Writing Demo */}
            <Card className="bg-white border border-gray-200 rounded-[20px] shadow-lg">
              <CardHeader>
                <CardTitle className="text-xl text-[#22201d] flex items-center">
                  <PenTool className="h-5 w-5 mr-2 text-[#6cae75]" />
                  AI Content Generator
                </CardTitle>
                <CardDescription className="text-[#22201d] opacity-70">
                  Create blog posts, social media content, emails, and more with AI
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex space-x-2">
                  <Textarea
                    placeholder="Describe what you want to write... (e.g., 'Write a blog post about AI productivity tools', 'Create an email campaign for a new product launch')"
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    className="flex-1 min-h-[100px] text-[#22201d]"
                    disabled={isLimitReached}
                  />
                  <div className="flex flex-col space-y-2">
                    <Button 
                      variant="outline"
                      size="sm"
                      disabled={isLimitReached}
                      className="border-gray-300"
                    >
                      <FileText className="h-4 w-4 mr-2" />
                      Templates
                    </Button>
                    <Button 
                      onClick={generateContent}
                      disabled={!prompt.trim() || isWriting || isLimitReached}
                      className="bg-[#6cae75] hover:bg-[#5a9d64] text-white"
                    >
                      {isWriting ? "Writing..." : "Generate Content"}
                    </Button>
                  </div>
                </div>
                
                {generatedContent && (
                  <div className="mt-4 p-4 bg-[#e9ecf1] rounded-lg">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-medium text-[#22201d]">Generated Content:</h4>
                      <div className="flex space-x-2">
                        <Button
                          onClick={copyContent}
                          variant="outline"
                          size="sm"
                          className="border-gray-300"
                        >
                          <Copy className="h-4 w-4 mr-2" />
                          Copy
                        </Button>
                        <Button
                          onClick={generateContent}
                          variant="outline"
                          size="sm"
                          className="border-gray-300"
                        >
                          <RefreshCw className="h-4 w-4 mr-2" />
                          Regenerate
                        </Button>
                      </div>
                    </div>
                    <div className="prose text-[#22201d] whitespace-pre-wrap text-sm max-h-96 overflow-y-auto">
                      {generatedContent}
                    </div>
                  </div>
                )}

                {isLimitReached && (
                  <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
                    <p className="text-red-800 text-sm">
                      You've reached your daily limit of 30 minutes. Upgrade for unlimited access!
                    </p>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* AI Chat Interface */}
            <Card className={`bg-white border border-gray-200 rounded-[20px] shadow-lg transition-all duration-300 ${chatMinimized ? 'h-16' : 'h-96'}`}>
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <div className="w-8 h-8 bg-gradient-to-br from-[#6cae75] to-[#5a9d64] rounded-lg flex items-center justify-center">
                      <Bot className="h-4 w-4 text-white" />
                    </div>
                    <div>
                      <CardTitle className="text-base text-[#22201d]">Writing Coach</CardTitle>
                      <CardDescription className="text-xs text-[#22201d] opacity-70">Get help with your writing</CardDescription>
                    </div>
                  </div>
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => setChatMinimized(!chatMinimized)}
                    className="text-[#22201d] opacity-70 hover:text-[#22201d] hover:bg-[#e9ecf1]"
                  >
                    {chatMinimized ? <Maximize2 className="h-4 w-4" /> : <Minimize2 className="h-4 w-4" />}
                  </Button>
                </div>
              </CardHeader>

              {!chatMinimized && (
                <CardContent className="pt-0 pb-3">
                  <ScrollArea className="h-48 mb-4">
                    <div className="space-y-3">
                      {chatMessages.map((msg) => (
                        <div key={msg.id} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                          <div className={`flex items-start space-x-2 max-w-[80%] ${
                            msg.sender === 'user' ? 'flex-row-reverse space-x-reverse' : ''
                          }`}>
                            <div className={`w-6 h-6 rounded-full flex items-center justify-center ${
                              msg.sender === 'user' 
                                ? 'bg-[#6cae75]' 
                                : 'bg-gradient-to-br from-[#6cae75] to-[#5a9d64]'
                            }`}>
                              {msg.sender === 'user' ? (
                                <User className="h-3 w-3 text-white" />
                              ) : (
                                <Bot className="h-3 w-3 text-white" />
                              )}
                            </div>
                            <div className={`p-2 rounded-lg text-sm ${
                              msg.sender === 'user'
                                ? 'bg-[#6cae75] text-white'
                                : 'bg-[#e9ecf1] text-[#22201d]'
                            }`}>
                              {msg.message}
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </ScrollArea>
                  
                  <div className="flex space-x-2">
                    <Input
                      placeholder="Ask about writing techniques..."
                      value={chatMessage}
                      onChange={(e) => setChatMessage(e.target.value)}
                      onKeyPress={(e) => e.key === 'Enter' && sendChatMessage()}
                      className="text-sm bg-white border-gray-300 text-[#22201d] placeholder:text-[#22201d] placeholder:opacity-50"
                    />
                    <Button size="sm" onClick={sendChatMessage} className="bg-[#6cae75] hover:bg-[#5a9d64]">
                      <Send className="h-4 w-4" />
                    </Button>
                  </div>
                </CardContent>
              )}
            </Card>
          </div>

          {/* Sidebar with Affiliate Tools */}
          <div className="space-y-6">
            <AffiliateCard
              title="Copy.ai"
              description="Advanced AI copywriting tool for marketing and content creation."
              features={[
                "90+ copy templates",
                "Brand voice training",
                "Team collaboration",
                "Multi-language support"
              ]}
              ctaText="Start Writing"
              affiliateUrl="https://copy.ai/pricing"
              commission="Affiliate program"
              rating={4.5}
              onAffiliateClick={trackAffiliateClick}
              service="copy-ai"
            />

            <AffiliateCard
              title="Jasper AI"
              description="Professional AI writing assistant for businesses and marketers."
              features={[
                "Long-form content",
                "SEO optimization",
                "Brand guidelines",
                "Plagiarism checker"
              ]}
              ctaText="Try Jasper"
              affiliateUrl="https://jasper.ai/pricing"
              commission="Partner program"
              rating={4.7}
              onAffiliateClick={trackAffiliateClick}
              service="jasper"
            />

            <Card className="bg-gradient-to-br from-[#6cae75]/10 to-[#5a9d64]/10 border border-[#6cae75]/30 rounded-[20px]">
              <CardContent className="p-4 text-center">
                <h3 className="font-semibold text-[#22201d] mb-2">Pro Writing Tools</h3>
                <p className="text-sm text-[#22201d] opacity-70 mb-3">
                  Get unlimited content generation and advanced writing features.
                </p>
                <Button className="w-full bg-[#6cae75] hover:bg-[#5a9d64] text-white rounded-[30px]">
                  Upgrade Now
                </Button>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Writing;
